CHMOD(1L)


NNAAMMEE
       chmod - change the access permissions of files

SSYYNNOOPPSSIISS
       chmod   [-Rcfv]   [--recursive]   [--changes]   [--silent]
       [--quiet] [--verbose] [--help] [--version] mode file...

DDEESSCCRRIIPPTTIIOONN
       This manual page  documents  the  GNU  version  of  chmod.
       chmod changes the permissions of each given file according
       to _m_o_d_e, which can be either a symbolic representation  of
       changes  to  make, or an octal number representing the bit
       pattern for the new permissions.

       The     format     of     a     symbolic      mode      is
       `[ugoa...][[+-=][rwxXstugo...]...][,...]'.   Multiple sym-
       bolic operations can be given, separated by commas.

       A combination of the letters `ugoa' controls which  users'
       access  to  the file will be changed: the user who owns it
       (u), other users in the file's group (g), other users  not
       in  the  file's  group  (o), or all users (a).  If none of
       these are given, the effect is as if `a' were  given,  but
       bits that are set in the umask are not affected.

       The  operator  `+'  causes  the permissions selected to be
       added to the existing permissions of each file; `-' causes
       them  to  be  removed;  and `=' causes them to be the only
       permissions that the file has.

       The letters `rwxXstugo' select the new permissions for the
       affected  users:  read  (r), write (w), execute (or access
       for directories) (x), execute only if the file is a direc-
       tory  or already has execute permission for some user (X),
       set user or group ID on execution (s), save  program  text
       on swap device (t), the permissions that the user who owns
       the file currently has for it (u),  the  permissions  that
       other  users  in the file's group have for it (g), and the
       permissions that other users not in the file's group  have
       for it (o).

       A  numeric  mode  is  from one to four octal digits (0-7),
       derived by adding up the bits with values  4,  2,  and  1.
       Any  omitted  digits are assumed to be leading zeros.  The
       first digit selects the set user ID (4) and set  group  ID
       (2)  and save text image (1) attributes.  The second digit
       selects permissions for the user who owns the  file:  read
       (4), write (2), and execute (1); the third selects permis-
       sions for other users in the file's group, with  the  same
       values;  and  the fourth for other users not in the file's
       group, with the same values.

       chmod never changes the permissions of symbolic links; the
       chmod  system  call cannot change their permissions.  This
       is not a problem since the permissions of  symbolic  links
       are never used.  However, for each symbolic link listed on
       the command line, chmod changes  the  permissions  of  the
       pointed-to  file.   In  contrast,  chmod  ignores symbolic
       links encountered during recursive directory traversals.

OOPPTTIIOONNSS
       _-_c_, _-_-_c_h_a_n_g_e_s
              Verbosely describe  only  files  whose  permissions
              actually change.

       _-_f_, _-_-_s_i_l_e_n_t_, _-_-_q_u_i_e_t
              Do  not print error messages about files whose per-
              missions cannot be changed.

       _-_v_, _-_-_v_e_r_b_o_s_e
              Verbosely describe changed permissions.

       _-_R_, _-_-_r_e_c_u_r_s_i_v_e
              Recursively change permissions of  directories  and
              their contents.

       _-_-_h_e_l_p Print  a  usage message on standard output and exit
              successfully.

       _-_-_v_e_r_s_i_o_n
              Print version information on standard  output  then
              exit successfully.
